package jpa.seleccion.controller;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcCall;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.supercsv.io.CsvBeanWriter;
import org.supercsv.io.ICsvBeanWriter;
import org.supercsv.prefs.CsvPreference;

import jpa.seleccion.model.Seleccionados;
import jpa.seleccion.services.SeleccionadosServices;

@RestController
@CrossOrigin(origins = "http://localhost:4200")
@RequestMapping("candidatos/seleccion")
public class SeleccionadosController {
    
    @Autowired
    private JdbcTemplate jdbc;
    private SeleccionadosServices service;
    @GetMapping
    public ResponseEntity<List<Seleccionados>> getSeleccionados() {
		
		SqlParameterSource paramIn = new MapSqlParameterSource();
		
		SimpleJdbcCall refCursor = new SimpleJdbcCall(jdbc)
				.withProcedureName("GET_SELECCIONADOS")
				.returningResultSet("RESPONSE",BeanPropertyRowMapper.newInstance(Seleccionados.class));
		try {
			Map<String, Object> getSeleccionados = refCursor.execute(paramIn);
			List<Seleccionados> seleccionados = (List<Seleccionados>) getSeleccionados.get("RESPONSE");
			return new ResponseEntity<List<Seleccionados>>(seleccionados,HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
		}
	}
    
    @GetMapping("candidatos/seleccion/download")
    public void exportToCSV(HttpServletResponse response) throws IOException { {
    	response.setContentType("text/csv");
    	String fileName = "seleccionados.csv";
    	
    	String headerKey = "Content-Disposition";
    	String headerValue = "attachment; filename=" + fileName;
    	
    	response.setHeader(headerKey, headerValue);
    	
    	
    	Iterable<Seleccionados> seleccionados = service.listAll();
    	
    	ICsvBeanWriter csvWriter = new CsvBeanWriter(response.getWriter(), CsvPreference.STANDARD_PREFERENCE);
        String[] csvHeader = {"TIPO DOCUMENTO", "DOCUMENTO", "NOMBRE", "APELLIDO", "EDAD", "SEXO", "CIUDAD", "NIVEL EDUCATIVO", "PROFESION", "SCORE"};
        String[] nameMapping = {"tipoDocumento", "documento", "nombres", "apellidos", "edad", "sexo", "ciudad", "nivelEducativo", "profesion", "score"};
        
        csvWriter.writeHeader(csvHeader);
        
        for (Seleccionados seleccionado : seleccionados) {
            csvWriter.write(seleccionado, nameMapping);
        }
         
        csvWriter.close();
    }
}}